{"version":3,"sources":["useFetch.js","SingleMovie.js","context.js","Movies.js","SearchForm.js","Home.js","App.js","index.js"],"names":["useFetch","urlParams","useState","loading","setLoading","show","msg","error","setError","data","setData","fetchMovies","url","a","fetch","response","json","Response","Search","console","log","Error","useEffect","SingleMovie","id","useParams","movie","className","to","title","Title","year","Year","actors","Actors","plot","Plot","country","Language","Country","poster","Poster","imdbRating","src","alt","AppContext","React","createContext","AppProvider","children","query","setQuery","movies","Provider","value","useGlobalContext","useContext","Movies","map","imdbID","SearchForm","onSubmit","e","preventDefault","type","onChange","target","Home","App","path","exact","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.660d52d1.chunk.js","sourcesContent":["import React from 'react'\r\nimport { useState, useEffect } from 'react'\r\nconst API_ENDPOINT = `https://www.omdbapi.com/?apikey=4bba5af0`\r\n\r\nconst useFetch = (urlParams) => {\r\n    const [loading, setLoading] = useState(true);\r\n    const [error, setError] = useState({ show: false, msg: '' });\r\n    const [data, setData] = useState(null);\r\n    const fetchMovies = async (url) => {\r\n        setLoading(true);\r\n        try {\r\n            const response = await fetch(url);\r\n            const data = await response.json();\r\n            if (data.Response === 'True') {\r\n                setData(data.Search || data)\r\n                setError({ show: false, msg: '' });\r\n                console.log(data);\r\n\r\n            }\r\n            else {\r\n                setError({show: true, msg:data.Error})\r\n            }\r\n            setLoading(false);\r\n\r\n        } catch (error) {\r\n            console.log(error);\r\n            \r\n        }\r\n    }\r\n    useEffect(() => {\r\n        fetchMovies(`${API_ENDPOINT}${urlParams}`);\r\n    }, [urlParams])\r\n    return ({loading,error, data})\r\n}\r\n\r\nexport default useFetch\r\n","import React from \"react\";\r\nimport { useParams, Link } from \"react-router-dom\";\r\nimport useFetch from \"./useFetch\";\r\nimport \"./SingleMovie.css\";\r\nconst url =\r\n  \"https://upload.wikimedia.org/wikipedia/commons/f/fc/No_picture_available.png\";\r\n\r\nfunction SingleMovie() {\r\n  const { id } = useParams();\r\n  const { loading, error, data: movie } = useFetch(`&i=${id}`);\r\n  console.log(movie);\r\n  if (loading) {\r\n    return <div>loading</div>;\r\n  }\r\n  if (error.show) {\r\n    return (\r\n      <div className=\"page-error\">\r\n        <h1>{error.msg}</h1>\r\n        <Link to=\"/\" className=\"btn\">\r\n          back to movies\r\n        </Link>\r\n      </div>\r\n    );\r\n  }\r\n  const {\r\n    Title: title,\r\n    Year: year,\r\n    Actors: actors,\r\n    Plot: plot,\r\n    Language: language,\r\n    Country: country,\r\n    Poster: poster,\r\n    imdbRating,\r\n  } = movie;\r\n  return (\r\n    <section className=\"single-movie-info\">\r\n      <img src={poster === \"N/A\" ? url : poster} alt={title} />\r\n      <div className=\"single-movie-descript\">\r\n        <h2>{title}</h2>\r\n        <p>IMDB: {imdbRating}</p>\r\n        <p>Release date: {year}</p>\r\n        <p>Actor: {actors}</p>\r\n        <p>Country: {country}</p>\r\n        <p>Description: {plot}</p>\r\n      </div>\r\n      <Link to=\"/\" className=\"btn\">\r\n        <button>back to movies</button>\r\n      </Link>\r\n    </section>\r\n  );\r\n}\r\n\r\nexport default SingleMovie;\r\n","import React, { useState } from 'react'\r\nimport useFetch from './useFetch'\r\nexport const API_ENDPOINT = 'https://www.omdbapi.com/?apikey=4bba5af0'\r\nconst AppContext = React.createContext();\r\nconst AppProvider = ({ children }) => {\r\n    const [query, setQuery] = useState('marvel');\r\n    const { loading, error, data: movies } = useFetch(`&s=${query}`);\r\n    return (\r\n        <AppContext.Provider value={{ loading, error, movies, query, setQuery }}>\r\n            {children}\r\n        </AppContext.Provider>\r\n    )\r\n}\r\nexport const useGlobalContext = () => {\r\n    return React.useContext(AppContext);\r\n}\r\n\r\nexport {AppContext, AppProvider}\r\n","import React from \"react\";\r\nimport { useGlobalContext } from \"./context\";\r\nimport { Link } from \"react-router-dom\";\r\nimport \"./Movies.css\";\r\nconst url =\r\n  \"https://upload.wikimedia.org/wikipedia/commons/f/fc/No_picture_available.png\";\r\n\r\nfunction Movies() {\r\n  const { loading, error, movies } = useGlobalContext();\r\n  console.log(movies);\r\n  if (loading) {\r\n    return <div className=\"loading\"></div>;\r\n  }\r\n  if (error.show) return <div className=\"error\"></div>;\r\n  return (\r\n    <div className=\"movies-info\">\r\n      {movies.map((movie) => {\r\n        const { imdbID: id, Title: title, Poster: poster, Year: year } = movie;\r\n        return (\r\n          <Link to={`/movies/${id}`} key={id} className=\"movie-info\">\r\n            <article key={id}>\r\n              <img src={poster === \"N/A\" ? url : poster} alt={title} />\r\n              <div className=\"movie-info\">\r\n                <h4 className=\"title\">{title}</h4>\r\n                <p className=\"year\">{year}</p>\r\n              </div>\r\n            </article>\r\n          </Link>\r\n        );\r\n      })}\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default Movies;\r\n","import React from \"react\";\r\nimport { useGlobalContext } from \"./context\";\r\nimport \"./SearchForm.css\";\r\nconst SearchForm = () => {\r\n  const { query, setQuery, error } = useGlobalContext();\r\n  return (\r\n    <div className=\"search-control\">\r\n      <form className=\"search-form\" onSubmit={(e) => e.preventDefault()}>\r\n        <h2>Search movies</h2>\r\n        <input\r\n          type=\"text \"\r\n          className=\"form-input\"\r\n          value={query}\r\n          onChange={(e) => setQuery(e.target.value)}\r\n        />\r\n      </form>\r\n      <div className=\"error\">\r\n        {error.show && <div className=\"error\">{error.msg}</div>}\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default SearchForm;\r\n","import React from 'react'\r\nimport Movies from './Movies'\r\nimport Search from './SearchForm'\r\nimport './Home.css'\r\n\r\nfunction Home() {\r\n    return (\r\n        <main>\r\n            <h1>Film Info API</h1>\r\n            <Search />\r\n            <Movies/>\r\n        </main>\r\n    )\r\n}\r\n\r\nexport default Home\r\n","import { HashRouter as Router, Switch, Route, Link } from \"react-router-dom\";\nimport Movie from \"./SingleMovie\";\nimport { Children } from \"react\";\nimport Home from \"./Home\";\n\nfunction App() {\n  return (\n    <section className=\"movies-control\">\n      <Switch>\n        <Route path=\"/\" exact>\n          <Home />\n        </Route>\n        <Route path=\"/movies/:id\" children={<Movie />}></Route>\n      </Switch>\n    </section>\n  );\n}\n\nexport default App;\n","import React from 'react'\nimport ReactDOM from 'react-dom'\nimport './index.css'\nimport App from './App'\nimport { AppProvider } from './context'\nimport { BrowserRouter as Router } from 'react-router-dom'\nReactDOM.render(\n  <React.StrictMode>\n    <AppProvider>\n      <Router>\n        <App />\n      </Router>\n    </AppProvider>\n  </React.StrictMode>,\n  document.getElementById('root')\n)\n"],"sourceRoot":""}